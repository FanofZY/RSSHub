name: 'Docker Release'

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/docker-release.yml'
      - 'lib/**'
      - '!lib/**/*.test.ts'
      - 'Dockerfile'
  workflow_dispatch: {}

jobs:
  check-env:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      check-docker: ${{ steps.check-docker.outputs.defined }}
    steps:
      - id: check-docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        if: ${{ env.DOCKER_USERNAME != '' }}
        run: echo "defined=true" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: check-env
    if: needs.check-env.outputs.check-docker == 'true'
    timeout-minutes: 60
    permissions:
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (x64 version)
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false  # 不推送到 Docker Hub
          tags: my-image:latest  # 可以自定义标签
          platforms: linux/amd64  # 只构建 x64 版本

      - name: Save Docker image as tar
        run: |
          docker save my-image:latest -o my-image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: my-image
          path: my-image.tar

  description:
    runs-on: ubuntu-latest
    needs: check-env
    if: needs.check-env.outputs.check-docker == 'true'
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/rsshub
